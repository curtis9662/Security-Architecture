### My General Boilerplate Server deployment IAC 
### input restricted ACL Ranges, VPC, 
# Provider configuration
provider "aws" {
  region = "us-east-1"
}

# Create VPC
resource "aws_vpc" "main" {
  cidr_block = "10.0.0.0/16"
  
  tags = {
    Name = "main-vpc"
  }
}

# Create Internet Gateway
resource "aws_internet_gateway" "main" {
  vpc_id = aws_vpc.main.id
  
  tags = {
    Name = "main-igw"
  }
}

# Create Security Group for RDP
resource "aws_security_group" "rdp_access" {
  name        = "rdp_access"
  description = "Allow RDP access during business hours"
  vpc_id      = aws_vpc.main.id

  ingress {
    from_port   = 3389
    to_port     = 3389
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]

    # Time window restriction (7:00 AM - 4:00 PM EST)
    time_window {
      start_time = "07:00"
      end_time   = "16:00"
      time_zone  = "EST"
    }
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Create IAM Role for Read-Only Admin
resource "aws_iam_role" "readonly_admin" {
  name = "readonly_admin"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "ec2.amazonaws.com"
        }
      }
    ]
  })
}

# Attach ReadOnly policy to admin role
resource "aws_iam_role_policy_attachment" "readonly_admin_policy" {
  role       = aws_iam_role.readonly_admin.name
  policy_arn = "arn:aws:iam::aws:policy/ReadOnlyAccess"
}

# Create IAM User Claudeus
resource "aws_iam_user" "claudeus" {
  name = "Claudeus"
}

# Create policy for RDP access
resource "aws_iam_policy" "rdp_policy" {
  name = "rdp_access_policy"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Action = [
          "ec2:DescribeInstances",
          "ec2:GetPasswordData"
        ]
        Resource = "*"
      }
    ]
  })
}

# Attach RDP policy to Claudeus
resource "aws_iam_user_policy_attachment" "claudeus_rdp_policy" {
  user       = aws_iam_user.claudeus.name
  policy_arn = aws_iam_policy.rdp_policy.arn
}

# Launch 50 t2.micro instances
resource "aws_instance" "servers" {
  count         = 50
  ami           = "ami-0c55b159cbfafe1f0"  # Amazon Windows Server 2019 Base
  instance_type = "t2.micro"
  
  vpc_security_group_ids = [aws_security_group.rdp_access.id]
  subnet_id             = aws_vpc.main.default_subnet.id
  
  iam_instance_profile = aws_iam_role.readonly_admin.name

  tags = {
    Name = "server-${count.index + 1}"
  }
}

# Output instance IDs
output "instance_ids" {
  value = aws_instance.servers[*].id
}
